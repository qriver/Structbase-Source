   ######  配置根logger 语法:                                ######
       #  log4j.rootLogger =[level ], appenderName,appenderName2,.....#
       #  (1)日志记录的优先级(level)有error、fatal、warn、info、debug #
       #  debug级别最低所有的log信息都打出来，如果是info级别就屏蔽所有#
       #  debug级别的信息。                                           #
       ######  这里创建了两个附加器stdout和rolling               ######
       log4j.rootLogger=info,stdout,rolling

       log4j.appender.stdout=org.apache.log4j.ConsoleAppender

       log4j.appender.stdout.Target=System.out
       ######  将消息输出到控制台                                ######

       log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
       ######  配置附加器以便使用PatternLayout                   ######

       #log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
       log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss} %5p %c{1}:%L - %m%n
       ######  输出调用者的文件名和行号所用的模式                ######

      ##Appender 为日志输出目的地，Log4j提供的appender有以下几种：
      ##org.apache.log4j.ConsoleAppender（控制台），
      ##org.apache.log4j.FileAppender（文件），
      ##org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
      ##org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
      ##org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地

      ##log4j.appender.rolling=org.apache.log4j.FileAppender
      log4j.appender.rolling=org.apache.log4j.DailyRollingFileAppender

      #log4j.appender.rolling=org.apache.log4j.RollingFileAppender

       #log4j.appender.rolling.Append = true
       log4j.appender.rolling.File=../logs/dataProvide.log
       #log4j.appender.rolling.DatePattern=yyyyMMdd-HH'.log'
       log4j.appender.rolling.DatePattern=yyyy-MM-dd'.log'
       #log4j.appender.rolling.DatePattern = '.'yyyy-MM-dd
       ######  将消息输出到该路径，直接写ado.log则文件生成在工程下的Tomcat    ######

       log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
       ##log4j.appender.rolling.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
       ##log4j.appender.rolling.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
       log4j.appender.rolling.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %5p %c{1}:%L - %m%n

       ##log4j.appender.rolling.layout = org.apache.log4j.PatternLayout
       ##log4j.appender.rolling.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
